#LyX 2.4 created this file. For more info see https://www.lyx.org/
\lyxformat 620
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\use_default_options true
\maintain_unincluded_children no
\language american
\language_package default
\inputencoding utf8
\fontencoding auto
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_roman_osf false
\font_sans_osf false
\font_typewriter_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\float_placement class
\float_alignment class
\paperfontsize default
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\use_formatted_ref 0
\use_minted 0
\use_lineno 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\tablestyle default
\tracking_changes false
\output_changes false
\change_bars false
\postpone_fragile_content true
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\docbook_table_output 0
\docbook_mathml_prefix 1
\end_header

\begin_body

\begin_layout Enumerate
I'm working on a code that reads a dynare file (of a linear model).
 It can be any text file (so dynare is not fundamental).
 The idea is that,
 I read the dyanre-like file and create a json file with the equations written in timing t and t+1 as will be expected by Klein's method.
 The model has long leads and lags so I need to create auxiliary equations and variables to accommodate this feature.
 After creating the json file I compute the Jacobbian the equation with respect to the variables in t and t+1 using analytical methods and save the jacobbian's in the file that letter is loaded in memory.
 The procedure loads these files and evaluate them a parameter value and call Klein's solution method.
 The solution is working fine.
 
\end_layout

\begin_layout Enumerate
The system of equations I'm working on is
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Formula 
\[
AE_{t}x_{t+1}=Bx_{t}+C\epsilon_{t}
\]

\end_inset

where 
\begin_inset Formula $x_{t}$
\end_inset

 is a vector organized such that you have state first and control after.
 Let's call controls 
\begin_inset Formula $c_{t}$
\end_inset

 and states 
\begin_inset Formula $s_{t}$
\end_inset

.
 States included lagged values of the endogenous variables and lagged values of the exogenous variables.
 
\end_layout

\end_deeper
\begin_layout Enumerate
As mentioned before any variable in the model could have long lead and lags.
 For these variables the parser generates auxiliary variables and equations to write the model in the standard Klein format.
 So if there is a lead variable with orrder 2 for example the parser will create the following variables and equations.
 Say there is a variable in the system with y(+2) that is with two leads in this case,
 
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Formula 
\begin{align*}
x_{t}^{lead1} & =y(+1)\\
x_{t}^{lead2} & =x_{t+1}^{lead1}
\end{align*}

\end_inset

then effectively 
\begin_inset Formula $x_{t}^{lead2}=y(+1)$
\end_inset

,
 longer leads will follow the same approach.
 If you longer lags,
 say y(-2),
 you will also create auxiliary variables,
 in this case
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
x_{t+1}^{lag}=y
\]

\end_inset

so 
\begin_inset Formula $x_{t}^{lag}=y(-1),$
\end_inset

similarly longer lags can be accommodated.
 
\end_layout

\end_deeper
\begin_layout Enumerate
One aspect that deserves attention is the following:
 In the model,
 not all exogenous variables have the same lag structure.
 For example,
 you could you have two exogenous variables 
\begin_inset Formula 
\[
z_{1t}=\rho_{10}z_{1t-1}+\rho_{11}z_{1t-2}+\epsilon_{t}^{z1}
\]

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Formula 
\[
z_{2t}=\rho_{20}z_{2t-1}+\epsilon_{t}^{z2}
\]

\end_inset

so in this case,
 the 
\begin_inset Formula $z_{1t}$
\end_inset

 variable will be represented in Klein's Canonical representation with the equations
\begin_inset Formula 
\begin{align*}
x_{t+1}^{lag} & =z_{1t}
\end{align*}

\end_inset

so the representation would be 
\begin_inset Formula 
\begin{align*}
z_{1t+1} & =\rho_{10}z_{t}+\rho_{11}x_{t}^{lag}+\epsilon_{t+1}^{z1}\\
x_{t+1}^{lag} & =z_{1t}
\end{align*}

\end_inset

that leads to the following state vector 
\begin_inset Formula $\left(z_{1t},x_{t}^{lag},x_{t}^{lag2}\right)^{\prime}$
\end_inset

 and associated Klein's Canonical representation 
\begin_inset Formula 
\[
\left[\begin{array}{ccc}
1 & 0 & 0\\
0 & 1 & 0\\
0 & 0 & 1
\end{array}\right]\left[\begin{array}{c}
z_{1t+1}\\
x_{t+1}^{lag}\\
z_{2t+1}
\end{array}\right]=\left[\begin{array}{ccc}
\rho_{10} & \rho_{11} & 0\\
1 & 0 & 0\\
0 & 0 & \rho_{20}
\end{array}\right]\left[\begin{array}{c}
z_{1t}\\
x_{t}^{lag}\\
z_{2t}
\end{array}\right]+\left[\begin{array}{cc}
1 & 0\\
0 & 0\\
0 & 1
\end{array}\right]\left[\begin{array}{c}
\epsilon_{t+1}^{z1}\\
\epsilon_{t+1}^{z2}
\end{array}\right]
\]

\end_inset

that is,
 two important things emerge:
 
\end_layout

\begin_layout Enumerate
Even if the model in dynare syntax is written as 
\begin_inset Formula $z_{1t}=\rho_{10}z_{1t-1}+\rho_{11}z_{1t-1}+\epsilon_{t}^{z1}$
\end_inset

 the parser should understand it as 
\begin_inset Formula $z_{1t+1}=\rho_{10}z_{1t}+\rho_{11}z_{1t-1}+\epsilon_{t+1}^{z1}$
\end_inset

 and 
\begin_inset Formula $z_{t}$
\end_inset

 is still the contemporaneous exogenous variable.
 So that at shock at time 
\begin_inset Formula $z_{t}$
\end_inset

 moves 
\begin_inset Formula $z_{t}$
\end_inset

 and all other variables in the system.
 Say 
\begin_inset Formula 
\[
\tilde{y}_{t}=\alpha\tilde{y}_{t+1}+z_{t}
\]

\end_inset

where 
\begin_inset Formula $\tilde{y}_{t}$
\end_inset

 is an endogenous control.
 
\end_layout

\begin_layout Enumerate
In the system above (with the Canonical representation for the shocks) there is matrix R multiplying the vector of exogenous shocks in the example 
\begin_inset Formula 
\[
R=\left[\begin{array}{cc}
1 & 0\\
0 & 0\\
0 & 1
\end{array}\right]
\]

\end_inset

this matrix is part of matrix 
\begin_inset Formula $C$
\end_inset

 in the Canonical representation and should map shocks to exogenous states.
 Not all states will get a shock by construction.
\end_layout

\end_deeper
\begin_layout Enumerate
The next task is to build a state space representation for the Kalman filter.
 The way I'm doing this is 
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Formula $s_{t+1}=Ps_{t}$
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula $c_{t}=Fs_{t}$
\end_inset


\end_layout

\begin_layout Standard
For simplicity it is easier to split the matrices of the system taking into account the kind of variable we have (endogenous states,
 exogenous state,
 and controls).
 
\end_layout

\end_deeper
\begin_layout Enumerate
When computing the jacobbian of the model equations variables are ordered as follows 
\end_layout

\begin_deeper
\begin_layout Verbatim

variables = self.state_variables + self.control_variables
\end_layout

\begin_layout Standard
where 
\end_layout

\begin_layout Verbatim

self.state_variables = endogenous_states + exo_with_shocks + exo_without_shocks
\end_layout

\begin_layout Standard
So we can use this order to group variables in the F and P matrices cumming from Klein's solution
\end_layout

\begin_layout Standard
Lets call 
\begin_inset Formula $c_{t}$
\end_inset

 controls,
 
\begin_inset Formula $k_{t}$
\end_inset

 endogenous states and 
\begin_inset Formula $\xi_{t}$
\end_inset

 exogenous states.
 That 
\begin_inset Formula $c_{t}$
\end_inset

 is the vector containing self.control_variables,
 
\begin_inset Formula $k_{t}$
\end_inset

 a vector containing endogenous_states and 
\begin_inset Formula $\xi_{t}$
\end_inset

 ordered as exo_with_shocks + exo_without_shocks.
 With this notation is possible to expressed Klein's solution as 
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\left(\begin{array}{c}
k_{t+1}\\
\xi_{t+1}
\end{array}\right)=\left(\begin{array}{cc}
P_{kk} & P_{k\xi}\\
0 & P_{\xi\xi}
\end{array}\right)\left(\begin{array}{c}
k_{t}\\
\xi_{t}
\end{array}\right)+H\epsilon_{t}
\]

\end_inset

where 
\family roman
\series medium
\shape up
\size normal
\emph off
\nospellcheck off
\bar no
\strikeout off
\xout off
\uuline off
\uwave off
\noun off
\color none

\begin_inset Formula $\epsilon_{t}$
\end_inset

 contains the exogenous shocks and 
\begin_inset Formula $H$
\end_inset

 will be determined later.
 I'm using 
\begin_inset Formula $\xi_{t}$
\end_inset

 to denote the exogenous states to make the point that given the lag structure of the exiguous process 
\begin_inset Formula $\xi$
\end_inset

 is not equal to 
\begin_inset Formula $z_{t}$
\end_inset

 but it could include auxiliary states.
 
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
c_{t}=\left(\begin{array}{cc}
F_{ck} & F_{c\xi}\end{array}\right)\left(\begin{array}{c}
k_{t}\\
\xi_{t}
\end{array}\right)
\]

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
How to find H?
 Let 
\begin_inset Formula $x_{t}=\left(k_{t},\xi_{t}c_{t}\right)$
\end_inset

 and given the solution 
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Formula 
\[
\left[\begin{array}{c}
k_{t}\\
\xi_{t}\\
c_{t}
\end{array}\right]=\left[\begin{array}{ccc}
p_{kk} & p_{k\xi} & 0\\
0 & p_{\xi\xi} & 0\\
F_{ck} & F_{c\xi} & 0
\end{array}\right]\left[\begin{array}{c}
k_{t-1}\\
\xi_{t-1}\\
c_{t-1}
\end{array}\right]+H\epsilon_{t}
\]

\end_inset

or written in matrix form
\begin_inset Formula 
\[
x_{t}=\Omega x_{t-1}+H\epsilon_{t}
\]

\end_inset

 we can replace the solution in the Cannonical represenation to get H
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
A\Omega x_{t}=B\Omega x_{t-1}+\left(B\Omega H+C\right)\epsilon_{t}
\]

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
In the code full_code_includes_parser.py I'm working on an implementation that augments the state space by including stochastic trends and also has other characteristics.
 
\end_layout

\begin_deeper
\begin_layout Enumerate
Only a subset of the variables is observable,
 as defined by the user
\end_layout

\begin_layout Enumerate
The code is written in a way the maximizes efficiency and limits the regeneration of matrices that are constant across parameter changes.
 That is,
 matrices,
 or submatrices that remain constant when parameters are changed.
 This is to generae a code that is efficient when computing the likelihood function or carry out mcmc.
 
\end_layout

\begin_layout Enumerate
The model state space representation remains similar but includes trends so the number of states is larger by definition.
 The augmented state space model should look like
\begin_inset Formula 
\begin{align*}
y_{t}^{obs} & =HC_{aug}x_{t}^{aug}\\
x_{t}^{aug} & =A_{aug}x_{t-1}^{aug}+B_{aug}\epsilon_{t}^{aug}
\end{align*}

\end_inset

where H:
 is a selection matrix with zeros and ones (or may be replace by an index) that selects the rows of 
\family roman
\series medium
\shape up
\size normal
\emph off
\nospellcheck off
\bar no
\strikeout off
\xout off
\uuline off
\uwave off
\noun off
\color none

\begin_inset Formula $C_{aug}x_{t}^{aug}$
\end_inset

 that are observable,
 
\begin_inset Formula 
\[
A_{aug}=\left[\begin{array}{cc}
A & 0\\
0 & A_{trend}
\end{array}\right]
\]

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Formula 
\[
B_{aug}=\left[\begin{array}{cc}
B & 0\\
0 & B_{trend}
\end{array}\right]
\]

\end_inset

and 
\begin_inset Formula $\epsilon_{t}^{aug}=\left(\epsilon_{t},\epsilon_{t}^{trends}\right)$
\end_inset

.
 
\end_layout

\end_deeper
\begin_layout Enumerate
Not all observable variables have the same trend specification.
 The trend specification of a variables can be 
\end_layout

\begin_deeper
\begin_layout Enumerate
Random walk:
 
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Formula 
\[
trend_{t}=trend_{t-1}+\epsilon_{t}^{level}
\]

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
Second difference
\begin_inset Formula 
\begin{align*}
trend_{t} & =trend_{t-1}+g_{t-1}+\epsilon_{t}^{level}\\
g_{t} & =g_{t-1}+\epsilon_{t}^{growth}
\end{align*}

\end_inset


\end_layout

\begin_layout Enumerate
Constant mean
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Formula 
\[
trend_{t}=trend_{t-1}
\]

\end_inset


\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
The code is not producing the right IRFs but I think is because,
 1) is not creating the state space representation in an organized for.
 I'm adding this information to seek you help and produce a state space represenation for the augmented model that matches the description above and repreduces the IRFS accordingly.
 
\end_layout

\begin_layout Enumerate
In a future specification we may consider situations where the trends can interact.
\end_layout

\end_deeper
\begin_layout Enumerate
The code is structure as follows:
\end_layout

\begin_deeper
\begin_layout Enumerate
DynareParser just reads the file and produce some auxiliary function and constants needed for the solution
\end_layout

\begin_layout Enumerate
ModelSover.
 Loads files created by the parser and computes the klain solution 
\end_layout

\begin_layout Enumerate
AugmentedState Space creates the augmented representation.
 
\end_layout

\end_deeper
\begin_layout Enumerate
There are several changes needed.
 ModelSolver has of function not needed and is missing Klein solution (that is available in the code,
 just copy that into the class).
 Remove all not necesary functions.
 
\end_layout

\begin_layout Enumerate
Check the augmented class and link it to the model solver.
 Check the the filtration is working and the irfs are correct.
 
\end_layout

\end_body
\end_document
