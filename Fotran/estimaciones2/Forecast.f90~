subroutine forecast(PAR, )
  USE HYBRID_CONST_MOD
  USE LIKELIHOOD_CONST_MOD  
  USE MODEL_CONST_MOD
  USE XINI_MOD
  USE PARAMETER_VECTOR_MOD
    
  IMPLICIT NONE
  !INTEGER, PARAMETER  :: dp = SELECTED_REAL_KIND(12, 60)
  !VARIABLES PARA ABMATRIX
  REAL(DP) , DIMENSION(NPAR) :: PARMODEL
  REAL (dp),  DIMENSION(NUM_N, NUM_N) :: AMAT, BMAT
  REAL (dp),  DIMENSION(ESTIMSIZE) , INTENT(IN) :: PAR

  !VARIABLES PARA DSOLAB
  INTEGER , INTENT(OUT) :: INFO

  REAL (dp),  DIMENSION(NUM_K,NUM_K) :: P 
  REAL (dp),  DIMENSION(NUM_N-NUM_K,NUM_K) :: F
  !VARIABLES PARA KALMAN FILER
  REAL (dp),  DIMENSION(NUM_CNTRL_OBS,NUM_K) :: F_OBS  
  REAL (dp),  DIMENSION(NUM_EST,NUM_EST) :: T
  REAL (dp),  DIMENSION(NUM_EST,NUM_EXO) :: R
  REAL (dp),  INTENT(OUT) :: LOG_L
 ! REAL(DP) ,  DIMENSION(NUM_RAT_OBS) :: RAT_OBS
  REAL (dp),  DIMENSION(NUM_OBS,NUM_PER) :: Y_CONS
!  REAL (DP),  INTENT(OUT) :: RAT_ERROR
  REAL (dp),  DIMENSION(NUM_OBS) :: H !VECTOR WITH THE ELEMENTS IN THE DIAGONAL OF MATRIX H  
  REAL (dp),  DIMENSION(NUM_EXO,NUM_EXO) :: Q  
  !VARIABLES PARA ESTADO ESTACIONARIO
  REAL (dp),  DIMENSION(NUM_N) :: SSVAL  
  REAL (dp)  BST  
  REAL (dp),  DIMENSION(size(XINI)) :: CXINI
  
  EXTERNAL KALMANFILTERMATRICES
  integer i,j
  
  integer, DIMENSION(NUM_OBS) :: INDE
  
  CXINI = XINI
  PARMODEL = PARVECTOR

  DO I=1,NUM_PAR_EST
     PARMODEL(PARIND(I))=PAR(I) 
  END DO

 ! CALL PASSPAR(PARMODEL,NPAR)
  
  CALL SOLVESS(PARMODEL, NPAR, CXINI, BST,INFO )  !Esta rutina llama PASSPAR(PARMODEL,NPAR) y actualiza los valores de los par√°metros
  
  IF ( ( INFO .NE. 0 ) ) then 
     print *, "No se encontro el ss"
     RETURN
  END IF

  CALL GETSTEADYSTATE(CXINI, NEQ, SSVAL, NUM_N, NUM_RAT_OBS, RAT_OBS)

  CALL ABMATRIX(NUM_N, AMAT, BMAT, log(SSVAL))   
  if (any(isnan(AMAT)) .or. any(isnan(BMAT))) then
     print *, "NAN en A o B"
  endif
  CALL DSOLAB(F, P, AMAT, BMAT, NUM_N, NUM_K, INFO)  
  
  IF ( INFO .NE. 0 ) THEN
     print *, "Solab no encontro la solucion"     
     RETURN
  END IF
  
  !Actualiza la semilla (xini)
  XINI = CXINI  
  CALL OBSCONTROLKALMAN(F,F_OBS)
  CALL KALMANFILTERMATRICES(F_OBS, P, NUM_K, NUM_EXO, NUM_CNTRL_OBS,R, T) 
  
  
  
end subroutine forecast
